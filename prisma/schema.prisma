// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  createdAt DateTime @default(now())
}

model File {
  id       Int    @id @default(autoincrement())
  filename String
  originalName String
  path     String
  mimetype String
  size     Int
  createdAt DateTime @default(now())
  skill    Skill?
  projectImage Project? @relation("ProjectImage")
  projectVideo Project? @relation("ProjectVideo")
}

model Skill {
  id       Int    @id @default(autoincrement())
  order    Int
  name     String
  fileId   Int?   @unique
  file     File?  @relation(fields: [fileId], references: [id], onDelete: SetNull)
  createdAt DateTime @default(now())
}

model Project {
  id          Int    @id @default(autoincrement())
  order       Int
  titleFr     String
  titleEn     String
  descriptionFr String @db.Text
  descriptionEn String @db.Text
  textFr      String @db.Text
  textEn      String @db.Text
  projectUrl  String?
  githubUrl   String?
  imageId     Int?   @unique
  videoId     Int?   @unique
  image       File?  @relation("ProjectImage", fields: [imageId], references: [id], onDelete: SetNull)
  video       File?  @relation("ProjectVideo", fields: [videoId], references: [id], onDelete: SetNull)
  createdAt   DateTime @default(now())
}